<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="barista_robot">

<xacro:property name="robot_name" value="$(arg robot_name)"/>

    <xacro:macro name="variable_elements">
            <!-- Mortys red -->
        <xacro:if value="${robot_name == 'morty'}">
            <material name="base_link">
                <color rgba="1 0 0 1"/>
            </material>
            <material name="cup_holder_tray">
                <color rgba="1 0 0 1"/>
            </material>

            <gazebo reference="base_link">
                <material>Gazebo/Red</material>
            </gazebo>
            <gazebo reference="cup_holder_tray">
                <material>Gazebo/Red</material>
            </gazebo>
        </xacro:if>

        <xacro:if value="${robot_name == 'rick'}">
            <!-- Ricks blue -->
            <material name="base_link">
                <color rgba="0 0 1 1"/>
            </material>
            <material name="cup_holder_tray">
                <color rgba="0 0 1 1"/>
            </material>


            <gazebo reference="base_link">
                <material>Gazebo/Blue</material>
            </gazebo>
            <gazebo reference="cup_holder_tray">
                <material>Gazebo/Blue</material>
            </gazebo>
        </xacro:if>
    </xacro:macro>


    <xacro:macro name="gazebo_elements">

        <gazebo reference="motorized_wheel_left">
            <kp>1000000000000000000000000000.0</kp>
            <kd>1000000000000000000000000000.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
            <material>Gazebo/Green</material>
        </gazebo>

        <gazebo reference="motorized_wheel_right">
            <kp>1000000000000000000000000000.0</kp>
            <kd>1000000000000000000000000000.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
            <material>Gazebo/Green</material>
        </gazebo>

        <gazebo reference="front_yaw_link">
            <material>Gazebo/Blue</material>
        </gazebo>

        <gazebo reference="front_roll_link">
            <material>Gazebo/Red</material>
        </gazebo>

        <gazebo reference="front_pitch_link">
            <kp>1000000000000000000000000000.0</kp>
            <kd>1000000000000000000000000000.0</kd>
            <mu1>0.5</mu1>
            <mu2>0.5</mu2>
            <material>Gazebo/Purple</material>
        </gazebo>

        <gazebo reference="back_yaw_link">
            <material>Gazebo/Blue</material>
        </gazebo>

        <gazebo reference="back_roll_link">
            <material>Gazebo/Red</material>
        </gazebo>

        <gazebo reference="back_pitch_link">
            <kp>1000000000000000000000000000.0</kp>
            <kd>1000000000000000000000000000.0</kd>
            <mu1>0.5</mu1>
            <mu2>0.5</mu2>
            <material>Gazebo/Yellow</material>
        </gazebo>

        <gazebo reference="standoff_rod_1">
            <material>Gazebo/Black</material>
        </gazebo>
        <gazebo reference="standoff_rod_2">
            <material>Gazebo/Black</material>
        </gazebo>
        <gazebo reference="standoff_rod_3">
            <material>Gazebo/Black</material>
        </gazebo>
        <gazebo reference="standoff_rod_4">
            <material>Gazebo/Black</material>
        </gazebo>

<!-- PLUGINS -->

    <!-- Differential drive -->
        <gazebo>
            <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
                <ros>
                    <namespace>/${robot_name}</namespace>
                    <remapping>/cmd_vel:=cmd_vel</remapping>
                </ros>

            <update_rate>30</update_rate>
            
            <!-- wheels -->
            <left_joint>base_to_wheel_left</left_joint>
            <right_joint>base_to_wheel_right</right_joint>

            <!-- kinematics -->
            <wheel_separation>0.256</wheel_separation>
            <wheel_diameter>0.0704</wheel_diameter>
            <publish_odom>true</publish_odom>

            <!-- TF frames -->
            <odometry_frame>${robot_name}/odom</odometry_frame>
            <robot_base_frame>${robot_name}/base_link</robot_base_frame>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>false</publish_wheel_tf>

            <!-- limits -->
            <max_wheel_torque>1.0</max_wheel_torque>
            <max_wheel_acceleration>2.0</max_wheel_acceleration>


            </plugin>
        </gazebo>

    </xacro:macro>


    <!-- This plugin simulates the laser scanner sensor in Gazebo and publishes LaserScan data -->
    <!-- Define the property for include_laser -->
    <xacro:property name="include_laser" value="true"/>
    <!-- Macro for the laser scanner sensor -->
    <xacro:macro name="laser_scanner" params="include_laser:=true">
        <xacro:if value="${include_laser}">
            <!-- Laser Scanner -->
            <link name="laser_scan_link">
                <visual>
                    <origin rpy="0 0 0" xyz="0 0 0"/>
                    <geometry>
                        <mesh filename="package://barista_robot_description/meshes/LIDAR_2D_Sensor/rplidar_a2.dae" scale="1.0 1.0 1.0"/>
                    </geometry>
                </visual>
                <collision>
                    <origin rpy="0 0 0" xyz="0 0 0.0204"/>
                    <geometry>
                        <cylinder length="0.0408" radius="0.037493"/>
                    </geometry>
                </collision>
                <inertial>
                    <mass value="0.20"/>
                    <origin rpy="0 0 0" xyz="0 0 0.0204"/>
                    <inertia ixx="9.803025244999999e-05" ixy="0" ixz="0" iyy="9.803025244999999e-05" iyz="0" izz="0.00014057250489999998"/>
                </inertial>
            </link>

            <gazebo reference="laser_scan_link">
                <material>Gazebo/Black</material>
            </gazebo>

            <!-- Laser Scanner Frame for positioning the gazebo_ros_laser-->
            <link name="laser_scan_frame_link">
            </link>

            <joint name="laser_scan_link_joint" type="fixed">
                <parent link="base_link"/>
                <child link="laser_scan_link"/>
                <origin rpy="0 0 0" xyz="0 0 0.0775"/>
            </joint>

            <joint name="laser_scan_frame_joint" type="fixed">
                <parent link="laser_scan_link"/>
                <child link="laser_scan_frame_link"/>
                <origin rpy="0 0 0" xyz="0 0 0.0306"/>
            </joint>

            <gazebo reference="laser_scan_frame_link">
                <sensor name="sensor_ray" type="ray">
                    <pose>0 0 0 0 0 0</pose>
                    <ray>
                        <scan>
                            <horizontal>
                                <samples>720</samples>
                                <resolution>0.5</resolution>
                                <min_angle>-3.14</min_angle>
                                <max_angle>3.14</max_angle>
                            </horizontal>
                        </scan>
                        <range>
                            <min>0.15</min>
                            <max>12.0</max>
                        </range>
                    </ray>
                    <always_on>true</always_on>
                    <visualize>true</visualize>
                    <update_rate>30.0</update_rate>
                    <plugin name="laser" filename="libgazebo_ros_ray_sensor.so">
                        <ros>
                            <namespace>${robot_name}</namespace>
                            <remapping>~/out:=scan</remapping>
                        </ros>
                        <frame_name>${robot_name}/base_link</frame_name>
                        <output_type>sensor_msgs/LaserScan</output_type>
                    </plugin>
                </sensor>
            </gazebo>
        </xacro:if>
    </xacro:macro>

    <!-- JOINT PUBLISHER -->
        <gazebo>
            <plugin name="barista_robot_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
                <ros>
                    <namespace>/${robot_name}</namespace>
                    <remapping>~/out:=joint_states</remapping>
                </ros>
                <update_rate>30</update_rate>

                <joint_name>base_to_wheel_left</joint_name>
                <joint_name>base_to_wheel_right</joint_name>
                <joint_name>front_yaw_joint</joint_name>
                <joint_name>back_yaw_joint</joint_name>
                <joint_name>front_roll_joint</joint_name>
                <joint_name>back_roll_joint</joint_name>
                <joint_name>front_pitch_joint</joint_name>
                <joint_name>back_pitch_joint</joint_name>
                <joint_name>laser_scan_link_joint</joint_name>
                <joint_name>laser_scan_frame_joint</joint_name>
            </plugin>
        </gazebo>

</robot>
